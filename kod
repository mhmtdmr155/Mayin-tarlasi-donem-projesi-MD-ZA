#include <stdio.h>
#include <stdlib.h>
#include <time.h>


#define N 10
#define MAYIN_ORANI 0.05
#define G 'G'
#define C 'Ç'
#define MAYIN 'X'
#define BOS_ALAN 'O'
#define guvensizBolge 'o'

char tahta[N][N];
int oyuncuX, oyuncuY;

// Fonksiyon prototipleri
void tahtaSifirla();
void mayinlariYerlestir();
void oyunTahtasiniYazdir();
void oyuncuHamlesiAl();
int oyunDurumuKontrol();
void guvensizBolgeleriYerlestir(int,int);
void oyunTahtasiniGizliYazdir(); 
void mayinAlaniTablosu();
void sonTablo();

int main() {
    srand(time(NULL));

    while (1) {
        tahtaSifirla();
        mayinlariYerlestir();
        oyuncuX = 0;
        oyuncuY = 0;

        while (1) {
            oyunTahtasiniYazdir();
            oyuncuHamlesiAl();

            int durum = oyunDurumuKontrol();
            if (durum == 1) {
            	system("cls");
                printf("\033[0;32mTebrikler! Oyunu kazandiniz!\033[0m\n\n\a");
                sonTablo();
                printf("\ntekrardan oynamak ister misiniz? (E/H): ");
                char cevap1;
                scanf(" %c", &cevap1);
                if (cevap1 == 'E' || cevap1 == 'e')
				break;               	
				else
				return 0;
            } 
            else if (durum == 2)
            {
            	system("cls");
            	mayinAlaniTablosu();
            	printf("mayin alanina girdiniz!\n");
            	oyuncuX = 0, oyuncuY = 0;
                printf("Oyunu sifirlamak ister misiniz? (E/H): ");
                char cevap;
                scanf(" %c", &cevap);
                if (cevap == 'E' || cevap == 'e')
				break;     
                
			}
			else if (durum == -1) {
                printf("Oyunu kaybettiniz. Yeniden denemek ister misiniz? (E/H): ");
                char cevap;
                scanf(" %c", &cevap);
                if (cevap != 'E' && cevap != 'e') {
                    printf("Oyun sona erdi. Iyi günler!\n");
                    return 0;
                } else {
                    break;
                }
            }
        }
    }

    return 0;
}

void tahtaSifirla() {
    for (int i = 0; i < N; i++) {
        for (int j = 0; j < N; j++) {
            tahta[i][j] = BOS_ALAN;
        }
    }
    tahta[oyuncuX][oyuncuY] = G;
    tahta[N - 1][N - 1] = C;
}

void mayinlariYerlestir() {
    int toplamMayin = N * N * MAYIN_ORANI;

    while (toplamMayin > 0) {
        int x = rand() % N;
        int y = rand() % N;

        if (tahta[x][y] != MAYIN && tahta[x][y] != G && tahta[x][y] != C) {  
            tahta[x][y] = MAYIN;
             if (tahta[1][0] == MAYIN || tahta[0][1] == MAYIN || tahta[N-2][N-1] == MAYIN || tahta[N-1][N-2] == MAYIN)
             {
             	continue;
			 }  
			 else
			 {
			 	guvensizBolgeleriYerlestir(x,y);
            	toplamMayin--;
			 }
        }
    }
}

void guvensizBolgeleriYerlestir(int X, int Y) 
{
    if (X > 0 && tahta[X-1][Y] == BOS_ALAN) tahta[X-1][Y] = guvensizBolge;
    if (X < N-1 && tahta[X+1][Y] == BOS_ALAN) tahta[X+1][Y] = guvensizBolge;
    if (Y > 0 && tahta[X][Y-1] == BOS_ALAN) tahta[X][Y-1] = guvensizBolge;
    if (Y < N-1 && tahta[X][Y+1] == BOS_ALAN) tahta[X][Y+1] = guvensizBolge;
}



void oyunTahtasiniGizliYazdir() 
{
    system("cls");  // Windows için "cls", Linux için "clear"
    for (int i = 0; i < N; i++) {
        for (int j = 0; j < N; j++) {
            if (i == oyuncuX && j == oyuncuY) {
                printf("%c ", G);  // Oyuncunun mevcut konumu
            } else if (tahta[i][j] == C) {
                printf("%c ", BOS_ALAN);  // Çıkış noktasını göster
            } else {
                printf("%c ", BOS_ALAN);  // Mayınları gösterme
            }
        }
        printf("\n");
    }
    printf("\n");
}

void oyunTahtasiniYazdir() 
{
    if (tahta[oyuncuX][oyuncuY] == MAYIN) {
        oyunTahtasiniGizliYazdir();
        printf("Mayýna carptýnýz! Oyunu kaybettiniz.\n");
        exit(0);  // Oyuncu kaybetti, programı sonlandır
    } else if (oyuncuX==9 && oyuncuY==9) {
        //oyunTahtasiniGizliYazdir();
        printf("Tebrikler Oyunu kazandiniz!\n");
        exit(0);  // Oyuncu başardı tebrikler...
    } else {
        oyunTahtasiniGizliYazdir();
    }
}

void oyuncuHamlesiAl() {
    printf("Yon tuslariyla hareket edin (w,a,s,d): ");
    char hareket;
    scanf(" %c", &hareket);

    switch (hareket) {
        case 'w':
            if (oyuncuX > 0)
                oyuncuX--;
            break;
        case 'a':
            if (oyuncuY > 0)
                oyuncuY--;
            break;
        case 's':
            if (oyuncuX < N - 1)
                oyuncuX++;
            break;
        case 'd':
            if (oyuncuY < N - 1)
                oyuncuY++;
            break;
        default:
            printf("Gecersiz hamle! Lutfen yon tuslarini kullanin.\n"); 
    }
}

int oyunDurumuKontrol() {
    if (tahta[oyuncuX][oyuncuY] == MAYIN) {
        return -1;  // Oyunu kaybetme durumu
    } 
    else if (tahta[oyuncuX][oyuncuY] == guvensizBolge)
    {
    	return 2; // başa dönme durumu
	}
	else if (tahta[oyuncuX][oyuncuY] == C) {
        return 1;   // Oyunu kazanma durumu
    }

    return 0;  // Oyun devam ediyor
}

void mayinAlaniTablosu () // mayın alanýna girildiği zaman gösterilecek tablo
{
	    for (int i = 0; i < N; i++) 
		{
        for (int j = 0; j < N; j++) 
		{
            if (i == oyuncuX && j == oyuncuY)
            printf("\033[0;31m%c \033[0m", tahta[i][j]);  // Oyuncunun mevcut konumu
            else
            printf("%c ", BOS_ALAN);  
        }
        printf("\n");
    }
    printf("\n");
}

void sonTablo ()
{
		for (int i = 0; i < N; i++) 
		{
        for (int j = 0; j < N; j++) 
		{
            if (tahta[i][j] == MAYIN)
            printf("\033[0;31m%c \033[0m", tahta[i][j]);  // mayınların gösterimi
            else if (tahta[i][j] == guvensizBolge)
            printf("\033[0;33m%c \033[0m", tahta[i][j]); // güvensiz bölgelerin gösterimi
            else
            printf("%c ", tahta[i][j]); 
        }
        printf("\n");
    }
    printf("\n");	
}
