//Mehmet Demir-22110131033
//Zelal Aydın - 22110131060



#include <stdio.h>
#include <stdlib.h>
#include <time.h>


#define MAYIN_ORANI 0.05
#define G 'G'
#define C 'C'
#define MAYIN 'X'
#define BOS_ALAN 'O'
#define guvensizBolge 'o'

char tahta[100][100];
int oyuncuX, oyuncuY;
int oyuncuYerleri[100][2];
int a = 1; // a oyuncu yerlerini kaydetmek için

// Fonksiyon Tanımlama kısmı
void tahtaSifirla(int);
void mayinlariYerlestir(int);
void guvensizBolgeleriYerlestir(int,int,int);
void oyunTahtasiniGizliYazdir(int);
void oyuncuHamlesiAl(int);
int oyunDurumuKontrol();
void mayinAlaniTablosu(int);
void sonTablo(int);
void gecilenYerleriSifirlama();


int main() {
    srand(time(NULL));
    tekrardanOyna:
    system("cls");
    int N;
    printf("tahta boyutunu giriniz: ");
    scanf("%d", &N);
    oyuncuYerleri[0][0] = 0;
	oyuncuYerleri[0][1] = 0; 

    while (1) {
        tahtaSifirla(N);
        mayinlariYerlestir(N);
		gecilenYerleriSifirlama();

        while (1) {
            oyunTahtasiniGizliYazdir(N);
            oyuncuHamlesiAl(N);
            oyuncuYerleri[a][0] = oyuncuY;
			oyuncuYerleri[a][1] = oyuncuX;
			a++;
            
            int durum = oyunDurumuKontrol();
            if (durum == 1) {
            	system("cls");
                printf("\033[0;32mTebrikler! Oyunu kazandiniz!\033[0m\n\n\a");
                sonTablo(N);
                printf("\ntekrardan oynamak ister misiniz? Evet/Hayir -->  (E/H): ");
                char cevap1;
                scanf(" %c", &cevap1);
                if (cevap1 == 'E' || cevap1 == 'e')
				goto tekrardanOyna;               	
				else
				return 0;
				
				
				
				
				
            } 
            else if (durum == 2)
            {
            	system("cls");
            	mayinAlaniTablosu(N);
            	gecilenYerleriSifirlama();
            	printf("mayin alanina girdiniz!\n");
            	oyuncuX = 0, oyuncuY = 0;
                printf("tekrar denemek ister misiniz? Evet/Hayir --> (E/H): ");
                char cevap;
                scanf(" %c", &cevap);
                if (cevap == 'E' || cevap == 'e')
				break;     
                
			}
			else if (durum == -1) {
                printf("Oyunu kaybettiniz. Yeniden denemek ister misiniz? Evet/Hayir -->  (E/H): ");
                char cevap;
                scanf(" %c", &cevap);
                if (cevap != 'E' && cevap != 'e') {
                    printf("Oyun sona erdi. Iyi gunler!\n");
                    return 0;
                } else {
                    break;
                }
            }
        }
    }

    return 0;
}

void tahtaSifirla(int N) {
    oyuncuX = 0;
    oyuncuY = 0;
    for (int i = 0; i < N; i++) {
        for (int j = 0; j < N; j++) {
            tahta[i][j] = BOS_ALAN;
        }
    }
    tahta[oyuncuX][oyuncuY] = G;
    tahta[N - 1][N - 1] = C;
}

void mayinlariYerlestir(int N) {
    int toplamMayin = N * N * MAYIN_ORANI;

    while (toplamMayin > 0) {
        int x = rand() % N;
        int y = rand() % N;

        if (tahta[x][y] != MAYIN && tahta[x][y] != G && tahta[x][y] != C) {  
            tahta[x][y] = MAYIN;
             if (tahta[1][0] == MAYIN || tahta[0][1] == MAYIN || tahta[N-2][N-1] == MAYIN || tahta[N-1][N-2] == MAYIN)
             {
             	continue;
			 }  
			 else
			 {
			 	guvensizBolgeleriYerlestir(x,y,N);
            	toplamMayin--;
			 }
        }
    }
}

void guvensizBolgeleriYerlestir(int X, int Y, int N) 
{
    if (X > 0 && tahta[X-1][Y] == BOS_ALAN) tahta[X-1][Y] = guvensizBolge;
    if (X < N-1 && tahta[X+1][Y] == BOS_ALAN) tahta[X+1][Y] = guvensizBolge;
    if (Y > 0 && tahta[X][Y-1] == BOS_ALAN) tahta[X][Y-1] = guvensizBolge;
    if (Y < N-1 && tahta[X][Y+1] == BOS_ALAN) tahta[X][Y+1] = guvensizBolge;
}



void oyunTahtasiniGizliYazdir(int N) 
{
    system("cls");  // Windows için "cls" , Linux için "clear".
    for (int i = 0; i < N; i++) {
        for (int j = 0; j < N; j++) {
            if (i == oyuncuX && j == oyuncuY) {
                printf("\033[0;34m%c \033[0m", G);  // Oyuncunun mevcut konumu
            } else if (tahta[i][j] == C) {
                printf("\033[0;32m%c \033[0m", C);  // çıkış noktasini göster
            } else {
                printf("%c ", BOS_ALAN);  // Mayinlari gösterme
            }
        }
        printf("\n");
    }
    printf("\n");
}



void oyuncuHamlesiAl(int N) {
    printf("Yon tuslariyla hareket edin (w,a,s,d), Yeniden konumlandirmak icin (R): ");
    char hareket;
    scanf(" %c", &hareket);

    switch (hareket) {
        case 'w':
            if (oyuncuX > 0)
                oyuncuX--;
            break;
        case 'a':
            if (oyuncuY > 0)
                oyuncuY--;
            break;
        case 's':
            if (oyuncuX < N - 1)
                oyuncuX++;
            break;
        case 'd':
            if (oyuncuY < N - 1)
                oyuncuY++;
            break;
        case 'R':
        case 'r':
            tahtaSifirla(N);
            return;
        default:
            printf("Gecersiz hamle! Lutfen yon tuslarini veya oyunu sifirlamak isterseniz'R','r' tusunu kullanin.\n"); 
            return;
    }
}

int oyunDurumuKontrol() {
    if (tahta[oyuncuX][oyuncuY] == MAYIN) {
        return -1;  // Oyunu kaybetme durumu
    } 
    else if (tahta[oyuncuX][oyuncuY] == guvensizBolge)
    {
    	return 2; // başa dönme durumu
	}
	else if (tahta[oyuncuX][oyuncuY] == C) {
        return 1;   // Oynu kazanma durumu
    }

    return 0;  // Oyun devam ediyor
}

void mayinAlaniTablosu(int N) // mayın alanına girildiği zaman gösterilecek tablo
{
	    for (int i = 0; i < N; i++) 
		{
        for (int j = 0; j < N; j++) 
		{
            if (i == oyuncuX && j == oyuncuY)
            printf("\033[0;31m%c \033[0m", tahta[i][j]);  // Oyuncunun mevcut konumu
            else
            printf("%c ", BOS_ALAN);  
        }
        printf("\n");
    }
    printf("\n");
}

void sonTablo(int N)
{
		for (int i = 0; i < N; i++) 
		{
        for (int j = 0; j < N; j++) 
		{
			int gecildi = 0;
			if (i == (N-1) && j == (N-1))
			{
				printf("\033[0;32mG \033[0m");
				gecildi++;
			}
			
			for (int a = 0; oyuncuYerleri[a][0] != (N-1) || oyuncuYerleri[a][1] != (N-1); a++)
			{
				if (oyuncuYerleri[a][0] == j && oyuncuYerleri[a][1] == i )
				{
					printf("\033[0;32mG \033[0m");
					gecildi++;
					break;
				}
			}
            if (tahta[i][j] == MAYIN)
            printf("\033[0;31m%c \033[0m", tahta[i][j]);  // mayinların gösterimi
            else if (tahta[i][j] == guvensizBolge)
            printf("\033[0;33m%c \033[0m", tahta[i][j]); // güvensiz bölgelerin gösterimi
            else if (gecildi == 0)
            printf("%c ", tahta[i][j]); 
        }
        printf("\n");
    }
    printf("\n");	
}

void gecilenYerleriSifirlama()
{
	a = 1;
	for (int i = 0; i < 100; i++) 
	{
    	for (int j = 0; j < 2; j++) 
		{
        	oyuncuYerleri[i][j] = 0; // Tüm elemanlara sifir atamak.
   		}	
   	}
}
